
/* healthStatusDirective
 * directive for displaying health of a service/instance
 * using popover details
 */
(function() {
    'use strict';

    angular.module('healthStatus', [])
    .directive("healthStatus", [
    function($compile) {
        var linker = function($scope, element, attrs) {
            // cache some DOM elements
            var $el = $(element);
            var oldContent;

            // Called when the status of the host is updated.
            function update(){
                var statusObj = $scope.status;
                var contentObj = $scope.content;
                var popoverObj;

                // The popover text will be the content=".." tag, or the Service status if undefined
                var content = contentObj || (statusObj ? statusObj.description : undefined);

                // If there's no content to show in the popup or if the
                // status hasn't changed, exit.
                if ((!content) || oldContent === content){
                    oldContent = content;
                    return;
                }

                // Cache the popover content.
                oldContent = content;

                // NOTE: directly accessing the bootstrap popover data object here.
                popoverObj = $el.data("bs.popover");

                // if popover element already exists, update it
                if(popoverObj) {
                    // update the content
                    popoverObj.options.content = content;

                    // force popover to update using the new options
                    popoverObj.setContent();

                    // if the popover is currently visible, update
                    // it immediately, but turn off animation to
                    // prevent it fading in
                    if(popoverObj.$tip.is(":visible")){
                        popoverObj.options.animation = false;
                        popoverObj.show();
                        popoverObj.options.animation = true;
                    }
                // if popover element doesn't exist, create it
                } else {
                    // Set the popup with the content data.
                    $el.popover({
                        trigger: "hover",
                        placement: "right",
                        delay: 0,
                        content: content,
                        html: true,
                    });
                }
            }

            // if status object updates, update icon
            $scope.$watch("status", update);
        };

        return {
            restrict: "E",
            link: linker,
            scope: {
                content: "@content",
                // status object generated by serviceHealth
                status: "="
            }
        };

    }]);
})();
